{"ast":null,"code":"import { LCDClient } from '@terra-money/terra.js';\nconst clients = new Map();\nexport function createLCDClient(_ref) {\n  let {\n    lcdClientConfig,\n    network\n  } = _ref;\n  const clientConfig = {\n    URL: network.lcd,\n    chainID: network.chainID,\n    ...(typeof lcdClientConfig === 'function' ? lcdClientConfig(network) : lcdClientConfig ? lcdClientConfig : {})\n  };\n  const cacheKey = JSON.stringify(clientConfig);\n\n  if (clients.has(cacheKey)) {\n    return clients.get(cacheKey);\n  }\n\n  const lcdClient = new LCDClient(clientConfig);\n  clients.set(cacheKey, lcdClient);\n  return lcdClient;\n}","map":{"version":3,"sources":["../../../src/@terra-money/wallet-types/lcd.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA2C,uBAA3C;AAWA,MAAM,OAAO,GAAG,IAAI,GAAJ,EAAhB;AAEA,OAAM,SAAU,eAAV,OAGG;AAAA,MAHuB;AAC9B,IAAA,eAD8B;AAE9B,IAAA;AAF8B,GAGvB;AACP,QAAM,YAAY,GAAoB;AACpC,IAAA,GAAG,EAAE,OAAO,CAAC,GADuB;AAEpC,IAAA,OAAO,EAAE,OAAO,CAAC,OAFmB;AAGpC,QAAI,OAAO,eAAP,KAA2B,UAA3B,GACA,eAAe,CAAC,OAAD,CADf,GAEA,eAAe,GACf,eADe,GAEf,EAJJ;AAHoC,GAAtC;AAUA,QAAM,QAAQ,GAAG,IAAI,CAAC,SAAL,CAAe,YAAf,CAAjB;;AAEA,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAJ,EAA2B;AACzB,WAAO,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAP;AACD;;AAED,QAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,YAAd,CAAlB;AAEA,EAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,SAAtB;AAEA,SAAO,SAAP;AACD","sourcesContent":["import { LCDClient, LCDClientConfig } from '@terra-money/terra.js';\nimport { NetworkInfo } from './types';\n\ntype Config = Omit<LCDClientConfig, 'URL' | 'chainID'>;\nexport type WalletLCDClientConfig = Config | ((network: NetworkInfo) => Config);\n\ninterface Params {\n  lcdClientConfig?: WalletLCDClientConfig;\n  network: NetworkInfo;\n}\n\nconst clients = new Map<string, LCDClient>();\n\nexport function createLCDClient({\n  lcdClientConfig,\n  network,\n}: Params): LCDClient {\n  const clientConfig: LCDClientConfig = {\n    URL: network.lcd,\n    chainID: network.chainID,\n    ...(typeof lcdClientConfig === 'function'\n      ? lcdClientConfig(network)\n      : lcdClientConfig\n      ? lcdClientConfig\n      : {}),\n  };\n\n  const cacheKey = JSON.stringify(clientConfig);\n\n  if (clients.has(cacheKey)) {\n    return clients.get(cacheKey)!;\n  }\n\n  const lcdClient = new LCDClient(clientConfig);\n\n  clients.set(cacheKey, lcdClient);\n\n  return lcdClient;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}