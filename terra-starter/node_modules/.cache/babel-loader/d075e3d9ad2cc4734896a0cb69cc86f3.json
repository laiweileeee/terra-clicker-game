{"ast":null,"code":"var _jsxFileName = \"/Users/laiwei/Desktop/Code/learn-terra/clicker-portal/terra-starter/src/Pages/play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as execute from \"../contract/execute\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = () => {\n  _s();\n\n  const connectedWallet = useConnectedWallet(); // Configure this as you want, I like shorter games\n\n  const playTime = 15;\n  const [time, setTime] = useState(playTime);\n  const [gameOver, setGameOver] = useState(false); // We use this to track where the target is on the screen\n\n  const [targetPosition, setTargetPosition] = useState({\n    top: \"15%\",\n    left: \"50%\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState(0); // Every second we're going to lower the value of time.\n\n  useEffect(() => {\n    const unsubscribe = setInterval(() => {\n      setTime(time => time > 0 ? time - 1 : 0);\n    }, 1000);\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    if (time === 0) {\n      setTargetPosition({\n        display: \"none\"\n      }); // Show alert to let user know it's game over\n\n      alert(`Game Over! Your score is ${score}. Please confirm transaction to submit score.`);\n      submitScore();\n    }\n  }, [time]);\n\n  const submitScore = async () => {\n    if (connectedWallet && connectedWallet.network.name === \"testnet\") {\n      setLoading(true);\n      const tx = await execute.setScore(connectedWallet, score);\n      console.log(tx); // Once the transaction is confirmed, we let the user know and navigate to the leaderboard\n\n      alert(\"Score submitted!\");\n      setLoading(false);\n      window.location.href = \"/leaderboard\";\n    }\n  };\n\n  const handleClick = () => {\n    // OGs will know this :)\n    let audio = new Audio(\"/Zergling_explodes.mp3\"); // Don't let it get too loud!\n\n    audio.volume = 0.2;\n    audio.play();\n    setScore(score => score + 1); // Play around with this to control bounds!\n\n    setTargetPosition({\n      top: `${Math.floor(Math.random() * 80)}%`,\n      left: `${Math.floor(Math.random() * 80)}%`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Fight!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Time left: \", time, \" s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://pngset.com/download-free-png-jnmvj\",\n        id: \"target\",\n        alt: \"Target\",\n        style: { ...targetPosition\n        },\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"Marine.png\",\n        id: \"marine-img\",\n        alt: \"Marine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"o25qDSdxH/nOrXEp4jSeNiNXtZk=\", false, function () {\n  return [useConnectedWallet];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/laiwei/Desktop/Code/learn-terra/clicker-portal/terra-starter/src/Pages/play.js"],"names":["React","useState","useEffect","execute","useConnectedWallet","LoadingIndicator","Play","connectedWallet","playTime","time","setTime","gameOver","setGameOver","targetPosition","setTargetPosition","top","left","loading","setLoading","score","setScore","unsubscribe","setInterval","display","alert","submitScore","network","name","tx","console","log","window","location","href","handleClick","audio","Audio","volume","play","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as execute from \"../contract/execute\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\n\nconst Play = () => {\n  const connectedWallet = useConnectedWallet();\n  // Configure this as you want, I like shorter games\n  const playTime = 15;\n\n  const [time, setTime] = useState(playTime);\n  const [gameOver, setGameOver] = useState(false);\n  // We use this to track where the target is on the screen\n  const [targetPosition, setTargetPosition] = useState({\n    top: \"15%\",\n    left: \"50%\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // Every second we're going to lower the value of time.\n  useEffect(() => {\n    const unsubscribe = setInterval(() => {\n      setTime((time) => (time > 0 ? time - 1 : 0));\n    }, 1000);\n    return unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    if (time === 0) {\n      setTargetPosition({ display: \"none\" });\n      // Show alert to let user know it's game over\n      alert(\n        `Game Over! Your score is ${score}. Please confirm transaction to submit score.`\n      );\n      submitScore();\n    }\n  }, [time]);\n\n  const submitScore = async () => {\n    if (connectedWallet && connectedWallet.network.name === \"testnet\") {\n      setLoading(true);\n      const tx = await execute.setScore(connectedWallet, score);\n      console.log(tx);\n      // Once the transaction is confirmed, we let the user know and navigate to the leaderboard\n      alert(\"Score submitted!\");\n      setLoading(false);\n      window.location.href = \"/leaderboard\";\n    }\n  };\n\n  const handleClick = () => {\n    // OGs will know this :)\n    let audio = new Audio(\"/Zergling_explodes.mp3\");\n\n    // Don't let it get too loud!\n    audio.volume = 0.2;\n    audio.play();\n\n    setScore((score) => score + 1);\n\n    // Play around with this to control bounds!\n    setTargetPosition({\n      top: `${Math.floor(Math.random() * 80)}%`,\n      left: `${Math.floor(Math.random() * 80)}%`,\n    });\n  };\n\n  return (\n    <div className=\"score-board-container\">\n      <div className=\"play-container\">\n        <span>Score: {score}</span>\n        <span>Fight!</span>\n        <span>Time left: {time} s</span>\n      </div>\n\n      {/* Render loading or game container */}\n      {loading ? (\n        <LoadingIndicator />\n      ) : (\n        <div className=\"game-container\">\n          {/* CHANGE THIS IMAGE! It's loaded from the public folder. */}\n          <img\n            src={\"https://pngset.com/download-free-png-jnmvj\"}\n            id=\"target\"\n            alt=\"Target\"\n            style={{ ...targetPosition }}\n            onClick={handleClick}\n          />\n          <img src=\"Marine.png\" id=\"marine-img\" alt=\"Marine\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}