{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n  var _a, _b, _c;\n\n  var bufferSize;\n  var refCount = false;\n\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    _a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler;\n  } else {\n    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n  }\n\n  return share({\n    connector: function () {\n      return new ReplaySubject(bufferSize, windowTime, scheduler);\n    },\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/shareReplay.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,kBAA9B;AAEA,SAAS,KAAT,QAAsB,SAAtB;AAuJA,OAAM,SAAU,WAAV,CACJ,kBADI,EAEJ,UAFI,EAGJ,SAHI,EAGqB;;;AAEzB,MAAI,UAAJ;AACA,MAAI,QAAQ,GAAG,KAAf;;AACA,MAAI,kBAAkB,IAAI,OAAO,kBAAP,KAA8B,QAAxD,EAAkE;AAC7D,IAAA,EAAA,GAA8E,kBAAkB,CAA3E,UAArB,EAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EAArB,EAAuB,EAAA,GAAuD,kBAAkB,CAApD,UAA5C,EAAuB,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EAA5C,EAA8C,EAAA,GAAgC,kBAAkB,CAAlC,QAA9D,EAA8C,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAA9D,EAAgE,SAAS,GAAK,kBAAkB,CAAvB,SAA5E;AACD,GAFD,MAEO;AACL,IAAA,UAAU,GAAG,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAA,kBAAA,GAAsB,QAAnC;AACD;;AACD,SAAO,KAAK,CAAI;AACd,IAAA,SAAS,EAAE,YAAA;AAAM,aAAA,IAAI,aAAJ,CAAkB,UAAlB,EAA8B,UAA9B,EAAA,SAAA,CAAA;AAAoD,KADvD;AAEd,IAAA,YAAY,EAAE,IAFA;AAGd,IAAA,eAAe,EAAE,KAHH;AAId,IAAA,mBAAmB,EAAE;AAJP,GAAJ,CAAZ;AAMD","sourceRoot":"","sourcesContent":["import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b, _c;\n    var bufferSize;\n    var refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        (_a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler);\n    }\n    else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return share({\n        connector: function () { return new ReplaySubject(bufferSize, windowTime, scheduler); },\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n//# sourceMappingURL=shareReplay.js.map"]},"metadata":{},"sourceType":"module"}