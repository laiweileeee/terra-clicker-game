{"ast":null,"code":"import { modalStyle } from './style';\nexport function selectConnection(connections) {\n  return new Promise(resolve => {\n    var _a, _b;\n\n    const styleContainer = document.createElement('style');\n    const modalContainer = document.createElement('div');\n\n    function onComplete(connection) {\n      var _a, _b;\n\n      resolve(connection ? [connection.type, connection.identifier] : null);\n      (_a = styleContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(styleContainer);\n      (_b = modalContainer.parentElement) === null || _b === void 0 ? void 0 : _b.removeChild(modalContainer);\n    }\n\n    const element = createModalElement({\n      connections,\n      onComplete\n    });\n    styleContainer.textContent = modalStyle;\n    modalContainer.appendChild(element);\n    (_a = document.querySelector('head')) === null || _a === void 0 ? void 0 : _a.appendChild(styleContainer);\n    (_b = document.querySelector('body')) === null || _b === void 0 ? void 0 : _b.appendChild(modalContainer);\n  });\n}\n\nfunction createModalElement(_ref) {\n  let {\n    connections,\n    onComplete\n  } = _ref;\n  // ---------------------------------------------\n  // container\n  // ---------------------------------------------\n  const container = document.createElement('div');\n  container.setAttribute('class', 'wallet-select-modal'); // ---------------------------------------------\n  // container > div.wallet-select-modal--dim\n  // ---------------------------------------------\n\n  const dim = document.createElement('div');\n  dim.setAttribute('class', 'wallet-select-modal--dim');\n  container.appendChild(dim); // ---------------------------------------------\n  // content > div.wallet-select-modal--content\n  // ---------------------------------------------\n\n  const content = document.createElement('section');\n  content.setAttribute('class', 'wallet-select-modal--content');\n  container.appendChild(content); // h1\n\n  const title = document.createElement('h1');\n  title.textContent = 'Select a Wallet';\n  content.appendChild(title); // ul\n\n  const list = document.createElement('ul');\n  content.appendChild(list);\n\n  for (const connection of connections) {\n    const item = document.createElement('li');\n    const button = document.createElement('button');\n    button.addEventListener('click', () => onComplete(connection));\n    item.appendChild(button);\n    const icon = document.createElement('span');\n    icon.setAttribute('class', 'wallet-select-modal--icon');\n    button.appendChild(icon);\n    const iconImg = document.createElement('img');\n    iconImg.setAttribute('src', connection.icon);\n    iconImg.setAttribute('alt', `${connection.name} [${connection.identifier}]`);\n    icon.appendChild(iconImg);\n    const description = document.createElement('span');\n    description.setAttribute('class', 'wallet-select-modal--description');\n    description.textContent = connection.name;\n    button.appendChild(description);\n    const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    arrow.setAttribute('viewBox', '0 0 24 24');\n    button.appendChild(arrow);\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z');\n    arrow.appendChild(path);\n    list.appendChild(item);\n  } // events\n\n\n  dim.addEventListener('click', () => onComplete(null));\n  return container;\n}","map":{"version":3,"sources":["../../../../../src/@terra-money/wallet-controller/modules/connect-modal/index.ts"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,SAA3B;AAEA,OAAM,SAAU,gBAAV,CACJ,WADI,EACqB;AAEzB,SAAO,IAAI,OAAJ,CAAa,OAAD,IAAY;;;AAC7B,UAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAvB;AACA,UAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;;AAEA,aAAS,UAAT,CAAoB,UAApB,EAAiD;;;AAC/C,MAAA,OAAO,CAAC,UAAU,GAAG,CAAC,UAAU,CAAC,IAAZ,EAAkB,UAAU,CAAC,UAA7B,CAAH,GAA8C,IAAzD,CAAP;AACA,OAAA,EAAA,GAAA,cAAc,CAAC,aAAf,MAA4B,IAA5B,IAA4B,EAAA,KAAA,KAAA,CAA5B,GAA4B,KAAA,CAA5B,GAA4B,EAAA,CAAE,WAAF,CAAc,cAAd,CAA5B;AACA,OAAA,EAAA,GAAA,cAAc,CAAC,aAAf,MAA4B,IAA5B,IAA4B,EAAA,KAAA,KAAA,CAA5B,GAA4B,KAAA,CAA5B,GAA4B,EAAA,CAAE,WAAF,CAAc,cAAd,CAA5B;AACD;;AAED,UAAM,OAAO,GAAG,kBAAkB,CAAC;AACjC,MAAA,WADiC;AAEjC,MAAA;AAFiC,KAAD,CAAlC;AAKA,IAAA,cAAc,CAAC,WAAf,GAA6B,UAA7B;AACA,IAAA,cAAc,CAAC,WAAf,CAA2B,OAA3B;AAEA,KAAA,EAAA,GAAA,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAA,MAA8B,IAA9B,IAA8B,EAAA,KAAA,KAAA,CAA9B,GAA8B,KAAA,CAA9B,GAA8B,EAAA,CAAE,WAAF,CAAc,cAAd,CAA9B;AACA,KAAA,EAAA,GAAA,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAA,MAA8B,IAA9B,IAA8B,EAAA,KAAA,KAAA,CAA9B,GAA8B,KAAA,CAA9B,GAA8B,EAAA,CAAE,WAAF,CAAc,cAAd,CAA9B;AACD,GApBM,CAAP;AAqBD;;AAED,SAAS,kBAAT,OAMC;AAAA,MAN2B;AAC1B,IAAA,WAD0B;AAE1B,IAAA;AAF0B,GAM3B;AACC;AACA;AACA;AACA,QAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AACA,EAAA,SAAS,CAAC,YAAV,CAAuB,OAAvB,EAAgC,qBAAhC,EALD,CAOC;AACA;AACA;;AACA,QAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,EAAA,GAAG,CAAC,YAAJ,CAAiB,OAAjB,EAA0B,0BAA1B;AAEA,EAAA,SAAS,CAAC,WAAV,CAAsB,GAAtB,EAbD,CAeC;AACA;AACA;;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAhB;AACA,EAAA,OAAO,CAAC,YAAR,CAAqB,OAArB,EAA8B,8BAA9B;AAEA,EAAA,SAAS,CAAC,WAAV,CAAsB,OAAtB,EArBD,CAuBC;;AACA,QAAM,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAd;AACA,EAAA,KAAK,CAAC,WAAN,GAAoB,iBAApB;AACA,EAAA,OAAO,CAAC,WAAR,CAAoB,KAApB,EA1BD,CA4BC;;AACA,QAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAb;AACA,EAAA,OAAO,CAAC,WAAR,CAAoB,IAApB;;AAEA,OAAK,MAAM,UAAX,IAAyB,WAAzB,EAAsC;AACpC,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAb;AAEA,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,MAAM,UAAU,CAAC,UAAD,CAAjD;AAEA,IAAA,IAAI,CAAC,WAAL,CAAiB,MAAjB;AAEA,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAA,IAAI,CAAC,YAAL,CAAkB,OAAlB,EAA2B,2BAA3B;AAEA,IAAA,MAAM,CAAC,WAAP,CAAmB,IAAnB;AAEA,UAAM,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAA,OAAO,CAAC,YAAR,CAAqB,KAArB,EAA4B,UAAU,CAAC,IAAvC;AACA,IAAA,OAAO,CAAC,YAAR,CACE,KADF,EAEE,GAAG,UAAU,CAAC,IAAI,KAAK,UAAU,CAAC,UAAU,GAF9C;AAKA,IAAA,IAAI,CAAC,WAAL,CAAiB,OAAjB;AAEA,UAAM,WAAW,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAApB;AACA,IAAA,WAAW,CAAC,YAAZ,CAAyB,OAAzB,EAAkC,kCAAlC;AACA,IAAA,WAAW,CAAC,WAAZ,GAA0B,UAAU,CAAC,IAArC;AAEA,IAAA,MAAM,CAAC,WAAP,CAAmB,WAAnB;AAEA,UAAM,KAAK,GAAG,QAAQ,CAAC,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAd;AACA,IAAA,KAAK,CAAC,YAAN,CAAmB,SAAnB,EAA8B,WAA9B;AAEA,IAAA,MAAM,CAAC,WAAP,CAAmB,KAAnB;AAEA,UAAM,IAAI,GAAG,QAAQ,CAAC,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAb;AACA,IAAA,IAAI,CAAC,YAAL,CAAkB,GAAlB,EAAuB,gDAAvB;AAEA,IAAA,KAAK,CAAC,WAAN,CAAkB,IAAlB;AAEA,IAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACD,GAvEF,CAyEC;;;AACA,EAAA,GAAG,CAAC,gBAAJ,CAAqB,OAArB,EAA8B,MAAM,UAAU,CAAC,IAAD,CAA9C;AAEA,SAAO,SAAP;AACD","sourcesContent":["import { Connection, ConnectType } from '@terra-money/wallet-types';\nimport { modalStyle } from './style';\n\nexport function selectConnection(\n  connections: Connection[],\n): Promise<[type: ConnectType, identifier: string | undefined] | null> {\n  return new Promise((resolve) => {\n    const styleContainer = document.createElement('style');\n    const modalContainer = document.createElement('div');\n\n    function onComplete(connection: Connection | null) {\n      resolve(connection ? [connection.type, connection.identifier] : null);\n      styleContainer.parentElement?.removeChild(styleContainer);\n      modalContainer.parentElement?.removeChild(modalContainer);\n    }\n\n    const element = createModalElement({\n      connections,\n      onComplete,\n    });\n\n    styleContainer.textContent = modalStyle;\n    modalContainer.appendChild(element);\n\n    document.querySelector('head')?.appendChild(styleContainer);\n    document.querySelector('body')?.appendChild(modalContainer);\n  });\n}\n\nfunction createModalElement({\n  connections,\n  onComplete,\n}: {\n  connections: Connection[];\n  onComplete: (connection: Connection | null) => void;\n}): HTMLElement {\n  // ---------------------------------------------\n  // container\n  // ---------------------------------------------\n  const container = document.createElement('div');\n  container.setAttribute('class', 'wallet-select-modal');\n\n  // ---------------------------------------------\n  // container > div.wallet-select-modal--dim\n  // ---------------------------------------------\n  const dim = document.createElement('div');\n  dim.setAttribute('class', 'wallet-select-modal--dim');\n\n  container.appendChild(dim);\n\n  // ---------------------------------------------\n  // content > div.wallet-select-modal--content\n  // ---------------------------------------------\n  const content = document.createElement('section');\n  content.setAttribute('class', 'wallet-select-modal--content');\n\n  container.appendChild(content);\n\n  // h1\n  const title = document.createElement('h1');\n  title.textContent = 'Select a Wallet';\n  content.appendChild(title);\n\n  // ul\n  const list = document.createElement('ul');\n  content.appendChild(list);\n\n  for (const connection of connections) {\n    const item = document.createElement('li');\n\n    const button = document.createElement('button');\n    button.addEventListener('click', () => onComplete(connection));\n\n    item.appendChild(button);\n\n    const icon = document.createElement('span');\n    icon.setAttribute('class', 'wallet-select-modal--icon');\n\n    button.appendChild(icon);\n\n    const iconImg = document.createElement('img');\n    iconImg.setAttribute('src', connection.icon);\n    iconImg.setAttribute(\n      'alt',\n      `${connection.name} [${connection.identifier}]`,\n    );\n\n    icon.appendChild(iconImg);\n\n    const description = document.createElement('span');\n    description.setAttribute('class', 'wallet-select-modal--description');\n    description.textContent = connection.name;\n\n    button.appendChild(description);\n\n    const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    arrow.setAttribute('viewBox', '0 0 24 24');\n\n    button.appendChild(arrow);\n\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z');\n\n    arrow.appendChild(path);\n\n    list.appendChild(item);\n  }\n\n  // events\n  dim.addEventListener('click', () => onComplete(null));\n\n  return container;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}