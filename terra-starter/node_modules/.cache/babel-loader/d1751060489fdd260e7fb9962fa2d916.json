{"ast":null,"code":"var _jsxFileName = \"/Users/laiwei/Desktop/Code/learn-terra/clicker-portal/terra-starter/src/Pages/play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as execute from \"../contract/execute\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = () => {\n  _s();\n\n  const connectedWallet = useConnectedWallet();\n  const playTime = 15;\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(playTime);\n\n  const submitScore = async () => {\n    if (connectedWallet && connectedWallet.network.name === \"testnet\") {\n      // This will return the transaction object on confirmation\n      const tx = await execute.setScore(connectedWallet, score);\n      console.log(tx); // Once the transaction is confirmed, we let the user know\n\n      alert(\"Score submitted!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Fight!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Time left: \", time, \" s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      onClick: () => setScore(score => score + 1),\n      children: \"+1 score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      onClick: submitScore,\n      children: \"Submit score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"C6hU8KX+1gs70X43WWQEHbYnB+w=\", false, function () {\n  return [useConnectedWallet];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/laiwei/Desktop/Code/learn-terra/clicker-portal/terra-starter/src/Pages/play.js"],"names":["React","useState","execute","useConnectedWallet","Play","connectedWallet","playTime","score","setScore","time","setTime","submitScore","network","name","tx","console","log","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,eAAe,GAAGF,kBAAkB,EAA1C;AACA,QAAMG,QAAQ,GAAG,EAAjB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,QAAD,CAAhC;;AAEA,QAAMK,WAAW,GAAG,YAAY;AAC9B,QAAIN,eAAe,IAAIA,eAAe,CAACO,OAAhB,CAAwBC,IAAxB,KAAiC,SAAxD,EAAmE;AACjE;AACA,YAAMC,EAAE,GAAG,MAAMZ,OAAO,CAACM,QAAR,CAAiBH,eAAjB,EAAkCE,KAAlC,CAAjB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAHiE,CAIjE;;AACAG,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,8BAAcV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kCAAkBE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAgBE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAEI,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1CD;;GAAMP,I;UACoBD,kB;;;KADpBC,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as execute from \"../contract/execute\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\n\nconst Play = () => {\n  const connectedWallet = useConnectedWallet();\n  const playTime = 15;\n\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(playTime);\n\n  const submitScore = async () => {\n    if (connectedWallet && connectedWallet.network.name === \"testnet\") {\n      // This will return the transaction object on confirmation\n      const tx = await execute.setScore(connectedWallet, score);\n      console.log(tx);\n      // Once the transaction is confirmed, we let the user know\n      alert(\"Score submitted!\");\n    }\n  };\n\n  return (\n    <div className=\"score-board-container\">\n      <div className=\"play-container\">\n        <span>Score: {score}</span>\n        <span>Fight!</span>\n        <span>Time left: {time} s</span>\n      </div>\n\n      {/* Button to manually set score for testing */}\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={() => setScore((score) => score + 1)}\n      >\n        +1 score\n      </button>\n\n      {/* Button to submit score to be removed later don't be cheater >:(  */}\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={submitScore}\n      >\n        Submit score\n      </button>\n    </div>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}