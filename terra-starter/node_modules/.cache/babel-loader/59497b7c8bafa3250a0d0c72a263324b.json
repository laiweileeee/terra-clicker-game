{"ast":null,"code":"import bowser from 'bowser';\nimport MobileDetect from 'mobile-detect';\nexport const isMobile = () => {\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n  return !!mobileDetect.os();\n};\nexport const isDesktopChrome = isChromeExtensionCompatibleBrowser => {\n  const userAgent = navigator.userAgent;\n\n  if (isChromeExtensionCompatibleBrowser) {\n    return true;\n  }\n\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n  return !!(browser.satisfies({\n    chrome: '>60',\n    edge: '>80'\n  }) && !mobileDetect.os());\n};\nexport const getDesktopBrowserType = userAgent => {\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  if (!!mobileDetect.mobile()) {\n    return null;\n  }\n\n  if (browser.satisfies({\n    chrome: '>60',\n    chromium: '>60'\n  })) {\n    return 'chrome';\n  } else if (browser.satisfies({\n    edge: '>80'\n  })) {\n    return 'edge';\n  } else {\n    return null;\n  }\n};","map":{"version":3,"sources":["../../../../src/@terra-money/wallet-controller/utils/browser-check.ts"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,QAAnB;AACA,OAAO,YAAP,MAAyB,eAAzB;AAEA,OAAO,MAAM,QAAQ,GAAG,MAAK;AAC3B,QAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,SAAS,CAAC,SAA3B,CAArB;AAEA,SAAO,CAAC,CAAC,YAAY,CAAC,EAAb,EAAT;AACD,CAJM;AAMP,OAAO,MAAM,eAAe,GAC1B,kCAD6B,IAElB;AACX,QAAM,SAAS,GAAG,SAAS,CAAC,SAA5B;;AAEA,MAAI,kCAAJ,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,QAAM,OAAO,GAAG,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAAhB;AACA,QAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,SAAS,CAAC,SAA3B,CAArB;AAEA,SAAO,CAAC,EACN,OAAO,CAAC,SAAR,CAAkB;AAChB,IAAA,MAAM,EAAE,KADQ;AAEhB,IAAA,IAAI,EAAE;AAFU,GAAlB,KAGM,CAAC,YAAY,CAAC,EAAb,EAJD,CAAR;AAMD,CAlBM;AAoBP,OAAO,MAAM,qBAAqB,GAChC,SADmC,IAEgB;AACnD,QAAM,OAAO,GAAG,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAAhB;AACA,QAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,SAAS,CAAC,SAA3B,CAArB;;AAEA,MAAI,CAAC,CAAC,YAAY,CAAC,MAAb,EAAN,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAI,OAAO,CAAC,SAAR,CAAkB;AAAE,IAAA,MAAM,EAAE,KAAV;AAAiB,IAAA,QAAQ,EAAE;AAA3B,GAAlB,CAAJ,EAA2D;AACzD,WAAO,QAAP;AACD,GAFD,MAEO,IAAI,OAAO,CAAC,SAAR,CAAkB;AAAE,IAAA,IAAI,EAAE;AAAR,GAAlB,CAAJ,EAAwC;AAC7C,WAAO,MAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF,CAjBM","sourcesContent":["import bowser from 'bowser';\nimport MobileDetect from 'mobile-detect';\n\nexport const isMobile = () => {\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  return !!mobileDetect.os();\n};\n\nexport const isDesktopChrome = (\n  isChromeExtensionCompatibleBrowser: boolean,\n): boolean => {\n  const userAgent = navigator.userAgent;\n\n  if (isChromeExtensionCompatibleBrowser) {\n    return true;\n  }\n\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  return !!(\n    browser.satisfies({\n      chrome: '>60',\n      edge: '>80',\n    }) && !mobileDetect.os()\n  );\n};\n\nexport const getDesktopBrowserType = (\n  userAgent: string,\n): 'chrome' | 'edge' | 'firefox' | 'safari' | null => {\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  if (!!mobileDetect.mobile()) {\n    return null;\n  }\n\n  if (browser.satisfies({ chrome: '>60', chromium: '>60' })) {\n    return 'chrome';\n  } else if (browser.satisfies({ edge: '>80' })) {\n    return 'edge';\n  } else {\n    return null;\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}