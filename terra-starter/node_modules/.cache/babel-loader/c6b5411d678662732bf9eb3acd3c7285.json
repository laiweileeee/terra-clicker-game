{"ast":null,"code":"import { of, switchMap } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\nimport { catchError, map } from 'rxjs/operators';\nimport { getDesktopBrowserType } from '../utils/browser-check';\nconst FALLBACK = {\n  whitelist: [{\n    name: 'Terra Station',\n    identifier: 'station',\n    icon: 'https://assets.terra.money/icon/station-extension/icon.png',\n    urls: [{\n      browser: 'chrome',\n      url: 'https://chrome.google.com/webstore/detail/terra-station/aiifbnbfobpmeekipheeijimdpnlpgpp'\n    }, {\n      browser: 'firefox',\n      url: 'https://addons.mozilla.org/en-US/firefox/addon/terra-station-wallet/'\n    }]\n  }, {\n    name: 'XDEFI Wallet',\n    identifier: 'xdefi-wallet',\n    icon: 'https://xdefi-prod-common-ui.s3.eu-west-1.amazonaws.com/logo.svg',\n    urls: [{\n      browser: 'chrome',\n      url: 'https://chrome.google.com/webstore/detail/xdefi-wallet/hmeobnfnfcmdkdcmlblgagmfpfboieaf'\n    }]\n  }]\n};\nexport function getExtensions() {\n  const currentBrowser = getDesktopBrowserType(navigator.userAgent);\n\n  if (!currentBrowser) {\n    return of([]);\n  }\n\n  return fromFetch('https://assets.terra.money/extensions.json').pipe(switchMap(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return of(FALLBACK);\n    }\n  }), catchError(() => {\n    return of(FALLBACK);\n  }), map(_ref => {\n    let {\n      whitelist\n    } = _ref;\n    return whitelist.filter(_ref2 => {\n      let {\n        urls\n      } = _ref2;\n      return urls.some(_ref3 => {\n        let {\n          browser\n        } = _ref3;\n        return currentBrowser === browser;\n      });\n    }).map(_ref4 => {\n      let {\n        name,\n        identifier,\n        icon,\n        urls\n      } = _ref4;\n      return {\n        name,\n        identifier,\n        icon,\n        url: urls.find(_ref5 => {\n          let {\n            browser\n          } = _ref5;\n          return currentBrowser === browser;\n        }).url\n      };\n    });\n  }));\n}","map":{"version":3,"sources":["../../../../src/@terra-money/wallet-controller/operators/getExtensions.ts"],"names":[],"mappings":"AAAA,SAAqB,EAArB,EAAyB,SAAzB,QAA0C,MAA1C;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,UAAT,EAAqB,GAArB,QAAgC,gBAAhC;AACA,SAAS,qBAAT,QAAsC,wBAAtC;AAcA,MAAM,QAAQ,GAAe;AAC3B,EAAA,SAAS,EAAE,CACT;AACE,IAAA,IAAI,EAAE,eADR;AAEE,IAAA,UAAU,EAAE,SAFd;AAGE,IAAA,IAAI,EAAE,4DAHR;AAIE,IAAA,IAAI,EAAE,CACJ;AACE,MAAA,OAAO,EAAE,QADX;AAEE,MAAA,GAAG,EAAE;AAFP,KADI,EAKJ;AACE,MAAA,OAAO,EAAE,SADX;AAEE,MAAA,GAAG,EAAE;AAFP,KALI;AAJR,GADS,EAgBT;AACE,IAAA,IAAI,EAAE,cADR;AAEE,IAAA,UAAU,EAAE,cAFd;AAGE,IAAA,IAAI,EAAE,kEAHR;AAIE,IAAA,IAAI,EAAE,CACJ;AACE,MAAA,OAAO,EAAE,QADX;AAEE,MAAA,GAAG,EAAE;AAFP,KADI;AAJR,GAhBS;AADgB,CAA7B;AAsCA,OAAM,SAAU,aAAV,GAAuB;AAC3B,QAAM,cAAc,GAAG,qBAAqB,CAAC,SAAS,CAAC,SAAX,CAA5C;;AAEA,MAAI,CAAC,cAAL,EAAqB;AACnB,WAAO,EAAE,CAAC,EAAD,CAAT;AACD;;AAED,SAAO,SAAS,CAAC,4CAAD,CAAT,CAAwD,IAAxD,CAKL,SAAS,CAAE,GAAD,IAAQ;AAChB,QAAI,GAAG,CAAC,EAAR,EAAY;AACV,aAAO,GAAG,CAAC,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAE,CAAC,QAAD,CAAT;AACD;AACF,GANQ,CALJ,EAYL,UAAU,CAAC,MAAK;AACd,WAAO,EAAE,CAAC,QAAD,CAAT;AACD,GAFS,CAZL,EAeL,GAAG,CAAC,QAAkB;AAAA,QAAjB;AAAE,MAAA;AAAF,KAAiB;AACpB,WAAO,SAAS,CACb,MADI,CACG;AAAA,UAAC;AAAE,QAAA;AAAF,OAAD;AAAA,aACN,IAAI,CAAC,IAAL,CAAU;AAAA,YAAC;AAAE,UAAA;AAAF,SAAD;AAAA,eAAiB,cAAc,KAAK,OAApC;AAAA,OAAV,CADM;AAAA,KADH,EAIJ,GAJI,CAIA,SAAqC;AAAA,UAApC;AAAE,QAAA,IAAF;AAAQ,QAAA,UAAR;AAAoB,QAAA,IAApB;AAA0B,QAAA;AAA1B,OAAoC;AACxC,aAAO;AACL,QAAA,IADK;AAEL,QAAA,UAFK;AAGL,QAAA,IAHK;AAIL,QAAA,GAAG,EAAE,IAAI,CAAC,IAAL,CAAU;AAAA,cAAC;AAAE,YAAA;AAAF,WAAD;AAAA,iBAAiB,cAAc,KAAK,OAApC;AAAA,SAAV,EAAwD;AAJxD,OAAP;AAMD,KAXI,CAAP;AAYD,GAbE,CAfE,CAAP;AA8BD","sourcesContent":["import { Observable, of, switchMap } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\nimport { catchError, map } from 'rxjs/operators';\nimport { getDesktopBrowserType } from '../utils/browser-check';\n\ninterface Extensions {\n  whitelist: Array<{\n    name: string;\n    identifier: string;\n    icon: string;\n    urls: Array<{\n      browser: 'chrome' | 'edge' | 'firefox' | 'safari';\n      url: string;\n    }>;\n  }>;\n}\n\nconst FALLBACK: Extensions = {\n  whitelist: [\n    {\n      name: 'Terra Station',\n      identifier: 'station',\n      icon: 'https://assets.terra.money/icon/station-extension/icon.png',\n      urls: [\n        {\n          browser: 'chrome',\n          url: 'https://chrome.google.com/webstore/detail/terra-station/aiifbnbfobpmeekipheeijimdpnlpgpp',\n        },\n        {\n          browser: 'firefox',\n          url: 'https://addons.mozilla.org/en-US/firefox/addon/terra-station-wallet/',\n        },\n      ],\n    },\n    {\n      name: 'XDEFI Wallet',\n      identifier: 'xdefi-wallet',\n      icon: 'https://xdefi-prod-common-ui.s3.eu-west-1.amazonaws.com/logo.svg',\n      urls: [\n        {\n          browser: 'chrome',\n          url: 'https://chrome.google.com/webstore/detail/xdefi-wallet/hmeobnfnfcmdkdcmlblgagmfpfboieaf',\n        },\n      ],\n    },\n  ],\n};\n\ninterface InstallableExtension {\n  name: string;\n  identifier: string;\n  icon: string;\n  url: string;\n}\n\nexport function getExtensions(): Observable<InstallableExtension[]> {\n  const currentBrowser = getDesktopBrowserType(navigator.userAgent);\n\n  if (!currentBrowser) {\n    return of([]);\n  }\n\n  return fromFetch('https://assets.terra.money/extensions.json').pipe<\n    Extensions,\n    Extensions,\n    InstallableExtension[]\n  >(\n    switchMap((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return of(FALLBACK);\n      }\n    }),\n    catchError(() => {\n      return of(FALLBACK);\n    }),\n    map(({ whitelist }) => {\n      return whitelist\n        .filter(({ urls }) =>\n          urls.some(({ browser }) => currentBrowser === browser),\n        )\n        .map(({ name, identifier, icon, urls }) => {\n          return {\n            name,\n            identifier,\n            icon,\n            url: urls.find(({ browser }) => currentBrowser === browser)!.url,\n          };\n        });\n    }),\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}